pipeline {
  agent any
  tools 
  { 
    nodejs 'NodeJs'
    ansible 'Ansible'
  }       
  environment {
    CI = 'true'
    REACT_APP_API_BASE_URL = credentials('api-base-url')
    REGISTRY = 'kkattlacrjenkins.azurecr.io'              
    IMAGE    = "${REGISTRY}/schedule_app_kkatl"     
    TAG      = "${env.BUILD_NUMBER}-${env.GIT_COMMIT?.substring(0,7) ?: 'dev'}"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Install') {
      steps {
        dir('frontend/frontend') {
          sh 'npm install --cache $HOME/.npm --prefer-offline'
        }
      }
    }

    stage('Build') {
      steps {
        dir('frontend/frontend') {
          sh 'npm run build && zip -r build.zip build'
        }
      }
    }

    stage('Docker image') {
      steps {
        dir('frontend') {
          withEnv(["PATH+DOCKER=/Applications/Docker.app/Contents/Resources/bin"]) {        
            withCredentials([usernamePassword(
                credentialsId: 'acr-admin-creds',
                usernameVariable: 'USER',
                passwordVariable: 'PASS')]) {

              sh '''
                echo $PASS | docker login $REGISTRY -u $USER --password-stdin
                docker build -t $IMAGE:$TAG -t $IMAGE:latest -f Dockerfile .
                docker push  $IMAGE:$TAG
                docker push  $IMAGE:latest
              '''
              }
          }
        }
      }
    }

     stage('Deploy via Ansible') {
      environment {
        PATH = "/opt/homebrew/bin:${env.PATH}"
      }
      steps {
        withCredentials([
          usernamePassword(
          credentialsId: 'azure-sp-creds',
          usernameVariable: 'AZURE_CLIENT_ID',
          passwordVariable: 'AZURE_CLIENT_SECRET'
        ),
        string(
          credentialsId: 'azure-tenant-id',
          variable: 'AZURE_TENANT_ID'
        ),
        string(
          credentialsId: 'azure-subscription-id',
          variable: 'AZURE_SUBSCRIPTION_ID'
        )
          ]) {
            sh '''
              az login --service-principal \
              -u $AZURE_CLIENT_ID \
              -p $AZURE_CLIENT_SECRET \
              --tenant $AZURE_TENANT_ID

              az account set --subscription $AZURE_SUBSCRIPTION_ID

              echo "=== WORKSPACE DIR ==="
              pwd
              echo "=== FIND PLAYBOOK ==="
              find . -type f -name "frontend_deploy_docker.yml"

              ansible-playbook -i ansible/inventory.ini \
                          ansible/deploy_frontend.yml \
                          --extra-vars "image_tag=${TAG}"
            '''
          }
        }
      }
     }
    


  post {
    success {
      archiveArtifacts artifacts: 'frontend/frontend/build.zip', fingerprint: true
    }
  }
}
