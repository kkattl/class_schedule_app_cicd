version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USERNAME}
      POSTGRES_PASSWORD: ${USERPASSWORD}
      POSTGRES_DB: ${DATABASE}
    volumes:
      - ./init/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./database.dump:/database.dump
    ports:
      - "5432:5432"
    networks:
      app-network:
        ipv4_address: 172.28.0.2

  redis:
    image: redis:8
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      app-network:
        ipv4_address: 172.28.0.3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DATABASE: ${DATABASE}
        USERNAME: ${USERNAME}
        USERPASSWORD: ${USERPASSWORD}
    container_name: backend
    ports:
      - "8080:8080"
    networks:
      app-network:
        ipv4_address: ${BACKEND_IP}
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_IP: ${BACKEND_IP}
    env_file:
      - .env
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      app-network:
        ipv4_address: 172.28.0.5
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
